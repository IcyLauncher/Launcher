<Page
    x:Class="IcyLauncher.WinUI.Views.SettingsViews.DeveloperViews.ThemeManagerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page.Transitions>
        <EntranceThemeTransition />
    </Page.Transitions>

    <ScrollViewer Padding="0,0,0,12" VerticalAlignment="Stretch">
        <StackPanel Spacing="8">
            <ContentControl Tag="IsSubscribedToUISettings|[Type: bool]  A boolean wether the app is subscribed to the UISettings" Template="{StaticResource SettingsCard}">
                <StackPanel Orientation="Horizontal" Spacing="8">
                    <TextBox IsHitTestVisible="False" Text="{x:Bind viewModel.IsSubscribedToUISettings, Mode=OneWay}" />
                    <Button Command="{x:Bind viewModel.UpdateIsSubscribedToUISettingsCommand}" Content="Update" />
                </StackPanel>
            </ContentControl>

            <Expander
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Header="SubscribeToUISettings()|Subscribes the app to all UISettings changes"
                Template="{StaticResource CardExpander}">
                <Expander.Tag>
                    <StackPanel Spacing="8">
                        <ContentControl Tag="subscribe|[Type: bool]  The boolean wether to subscribe or unsubscribe" Template="{StaticResource SettingsCard}">
                            <ToggleSwitch Name="SubscribeToUISettings" />
                        </ContentControl>
                    </StackPanel>
                </Expander.Tag>

                <Button
                    Command="{x:Bind viewModel.SubscribeToUISettingsCommand}"
                    CommandParameter="{x:Bind SubscribeToUISettings.IsOn}"
                    Content="Test Method" />
            </Expander>

            <ContentControl Tag="Colors|The current theme" Template="{StaticResource SettingsCard}">
                <Button Content="configuration.Apperance.Colors" IsEnabled="False" />
            </ContentControl>

            <TextBox
                VerticalAlignment="Top"
                IsEnabled="False"
                PlaceholderText="Theme..." />

            <ContentControl Tag="Export()|[Returns: string]  Exports the current theme as a string" Template="{StaticResource SettingsCard}">
                <Button Content="Test Method" IsEnabled="False" />
            </ContentControl>

            <Expander
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Header="Load()|Loads a theme as the current theme"
                Template="{StaticResource CardExpander}">
                <Expander.Tag>
                    <StackPanel Spacing="8">
                        <ContentControl Tag="input|[Type: Theme]  The theme which should get loaded" Template="{StaticResource SettingsCard}">
                            <ToggleSwitch IsEnabled="False" />
                        </ContentControl>
                        <ContentControl Tag="ignoreAccent|[Type: bool]  The boolean wether the accent should be ignored while loading" Template="{StaticResource SettingsCard}">
                            <ToggleSwitch IsEnabled="False" />
                        </ContentControl>
                    </StackPanel>
                </Expander.Tag>

                <Button Content="Test Method" IsEnabled="False" />
            </Expander>

            <Expander
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Header="ModifyColor()|[Returns: Color]  Darkens/Lightens a color by the given percentage"
                Template="{StaticResource CardExpander}">
                <Expander.Tag>
                    <StackPanel Spacing="8">
                        <ContentControl Tag="color|[Type: Color]  The source of the new color" Template="{StaticResource SettingsCard}">
                            <ColorPicker
                                Margin="0,0,-117,0"
                                Template="{StaticResource ColorPickerButton}"
                                Color="{x:Bind viewModel.SourceColor, Mode=TwoWay}" />
                        </ContentControl>
                        <ContentControl Tag="percentage|[Type: double]  The percentage of the color values that should be darkened/lightened" Template="{StaticResource SettingsCard}">
                            <NumberBox
                                Maximum="200"
                                Minimum="0"
                                SpinButtonPlacementMode="Compact"
                                Value="{x:Bind viewModel.Percentage, Mode=TwoWay}" />
                        </ContentControl>
                    </StackPanel>
                </Expander.Tag>

                <Button Command="{x:Bind viewModel.ModifyColorCommand}" Content="Test Method" />
            </Expander>

            <ContentControl Tag="RandomizeTheme()|Randomizes every color of the current theme. Use for debugging only" Template="{StaticResource SettingsCard}">
                <Button Command="{x:Bind viewModel.RandomizeThemeCommand}" Content="Test Method" />
            </ContentControl>

            <Expander
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                Header="GetRandomColor()|[Returns: Color]  Generates a random color"
                Template="{StaticResource CardExpander}">
                <Expander.Tag>
                    <ContentControl Tag="transparency|[optional: 255] [Type: byte?]  The transparency which the color should have" Template="{StaticResource SettingsCard}">
                        <NumberBox
                            Maximum="255"
                            Minimum="0"
                            SpinButtonPlacementMode="Compact"
                            Value="{x:Bind viewModel.Transparency, Mode=TwoWay}" />
                    </ContentControl>
                </Expander.Tag>

                <StackPanel Orientation="Horizontal" Spacing="8">
                    <ColorPicker
                        Margin="0,0,-117,0"
                        IsHitTestVisible="False"
                        Template="{StaticResource ColorPickerButton}"
                        Color="{x:Bind viewModel.RandomColor, Mode=OneWay}" />
                    <Button Command="{x:Bind viewModel.GetRandomColorCommand}" Content="Test Method" />
                </StackPanel>
            </Expander>
        </StackPanel>
    </ScrollViewer>
</Page>
