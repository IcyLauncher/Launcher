<Page
    x:Class="IcyLauncher.WinUI.Views.DeveloperSettingsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ex="using:CommunityToolkit.WinUI.UI"
    xmlns:hlprs="using:IcyLauncher.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="using:CommunityToolkit.WinUI.UI.Media"
    xmlns:mdls="using:IcyLauncher.Data.Models"
    xmlns:media="using:CommunityToolkit.WinUI.UI.Media"
    xmlns:xmle="using:IcyLauncher.Xaml.Elements"
    Background="Transparent"
    Loaded="{x:Bind viewModel.OnPageLoaded}"
    NavigationCacheMode="Disabled"
    mc:Ignorable="d">
    <Page.Resources>
        <md:AttachedCardShadow
            x:Key="CardShadow"
            BlurRadius="40"
            CornerRadius="8"
            Opacity="0.3"
            Offset="0,10,0" />

        <x:Boolean x:Key="par0">False</x:Boolean>
        <x:Boolean x:Key="par1">True</x:Boolean>
    </Page.Resources>

    <TabView
        VerticalAlignment="Stretch"
        AllowDrop="False"
        AllowDropTabs="False"
        CanDrag="False"
        CanDragTabs="False"
        CanReorderTabs="False"
        IsAddTabButtonVisible="False">

        <TabViewItem Header="ILogger&lt;SampleClass&gt;" IsClosable="False">
            <ScrollViewer Padding="8,12" VerticalAlignment="Stretch">
                <StackPanel Spacing="8">
                    <ContentControl Tag="Show Logger|Create a new window and hook all new logger events" Template="{StaticResource SettingsCard}">
                        <Button Command="{x:Bind viewModel.Logger_ShowCommand}" Content="Show Logger" />
                    </ContentControl>

                    <Expander
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        Header="Log()|Logs any message or exception to the console and writes it to a local text file"
                        Template="{StaticResource CardExpander}">
                        <Expander.Tag>
                            <StackPanel Spacing="8">
                                <ContentControl Tag="message|Type: object" Template="{StaticResource SettingsCard}">
                                    <TextBox
                                        Width="400"
                                        PlaceholderText="Message..."
                                        Text="{x:Bind viewModel.Logger_message, Mode=TwoWay}" />
                                </ContentControl>
                                <ContentControl Tag="exception|[optional] [default: null]  Type: Exception?" Template="{StaticResource SettingsCard}">
                                    <TextBox
                                        Width="400"
                                        PlaceholderText="Exception..."
                                        Text="{x:Bind viewModel.Logger_exception, Mode=TwoWay}" />
                                </ContentControl>
                                <ContentControl Tag="logLevel|[optional] [default: Information]  Type: LogLevel" Template="{StaticResource SettingsCard}">
                                    <ComboBox
                                        Width="125"
                                        PlaceholderText="Log Level..."
                                        SelectedIndex="{x:Bind viewModel.Logger_logLevel, Mode=TwoWay, Converter={StaticResource EnumIntConverter}}">
                                        <ComboBoxItem Content="Trace" />
                                        <ComboBoxItem Content="Debug" />
                                        <ComboBoxItem Content="Information" />
                                        <ComboBoxItem Content="Warning" />
                                        <ComboBoxItem Content="Error" />
                                        <ComboBoxItem Content="Critical" />
                                    </ComboBox>
                                </ContentControl>
                                <ContentControl Tag="filePath|[CallerFilePath] [optional] [default: &quot;&quot;]  Type: string" Template="{StaticResource SettingsCard}">
                                    <TextBox
                                        Width="200"
                                        PlaceholderText="File Path..."
                                        Text="{x:Bind viewModel.Logger_filePath, Mode=TwoWay}" />
                                </ContentControl>
                                <ContentControl Tag="memberName|[CallerMemberName] [optional] [default: &quot;&quot;]  Type: string" Template="{StaticResource SettingsCard}">
                                    <TextBox
                                        Width="200"
                                        PlaceholderText="File Path..."
                                        Text="{x:Bind viewModel.Logger_memberName, Mode=TwoWay}" />
                                </ContentControl>
                            </StackPanel>
                        </Expander.Tag>

                        <Button Command="{x:Bind viewModel.Logger_TestCommand}" Content="Test Method" />
                    </Expander>

                </StackPanel>
            </ScrollViewer>
        </TabViewItem>

        <TabViewItem Header="ConfigurationManager" IsClosable="False">
            <Grid Padding="8,12">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="8" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="8" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <ContentControl Tag="Export()|Export current configuration in bottom textbox" Template="{StaticResource SettingsCard}">
                    <Button Command="{x:Bind viewModel.ConfigurationManager_ExportCommand}" Content="Test Method" />
                </ContentControl>

                <Expander
                    Grid.Row="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top"
                    Header="Load()|Load configuration from bottom textbox"
                    Template="{StaticResource CardExpander}">
                    <Expander.Tag>
                        <ContentControl Tag="ignoreTheme|Type: bool" Template="{StaticResource SettingsCard}">
                            <ToggleSwitch IsOn="{x:Bind viewModel.ConfigurationManager_ignoreTheme, Mode=TwoWay}" />
                        </ContentControl>
                    </Expander.Tag>

                    <Button Command="{x:Bind viewModel.ConfigurationManager_LoadCommand}" Content="Test Method" />
                </Expander>

                <TextBox
                    Grid.Row="4"
                    Height="Auto"
                    VerticalAlignment="Top"
                    AcceptsReturn="True"
                    PlaceholderText="Configuration..."
                    ScrollViewer.VerticalScrollBarVisibility="Visible"
                    Text="{x:Bind viewModel.ConfigurationManager_currentConfig, Mode=TwoWay}" />
            </Grid>
        </TabViewItem>

        <TabViewItem Header="ThemeManager" IsClosable="False">
            <ScrollViewer Padding="8,12" VerticalAlignment="Stretch">
                <StackPanel Spacing="8">
                    <ContentControl Tag="Export()|Export current theme in bottom textbox" Template="{StaticResource SettingsCard}">
                        <Button Content="Test Method" IsEnabled="False" />
                    </ContentControl>

                    <Expander
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        Header="Load()|Load theme from bottom textbox"
                        Template="{StaticResource CardExpander}">
                        <Expander.Tag>
                            <ContentControl Tag="ignoreAccent|Type: bool" Template="{StaticResource SettingsCard}">
                                <ToggleSwitch IsEnabled="False" />
                            </ContentControl>
                        </Expander.Tag>

                        <Button Content="Test Method" IsEnabled="False" />
                    </Expander>

                    <ContentControl Tag="RandomizeTheme()|Randomize every single color in current theme" Template="{StaticResource SettingsCard}">
                        <Button Command="{x:Bind viewModel.ThemeManager_RandomizeThemeCommand}" Content="Test Method" />
                    </ContentControl>

                    <ContentControl Tag="SetResourceColors()|Sets resource colors from current configuration" Template="{StaticResource SettingsCard}">
                        <Button Command="{x:Bind viewModel.ThemeManager_SetResourceColorsCommand}" Content="Test Method" />
                    </ContentControl>

                    <ContentControl Tag="SetUnbindableBindings()|Binds non-bindable properties of UIElementReciever elements to their respected colors" Template="{StaticResource SettingsCard}">
                        <Button Command="{x:Bind viewModel.ThemeManager_SetUnbindableBindingsCommand}" Content="Test Method" />
                    </ContentControl>
                </StackPanel>
            </ScrollViewer>
        </TabViewItem>

        <TabViewItem
            Header="AppStartupHandler"
            IsClosable="False"
            IsEnabled="False" />

        <TabViewItem Header="WindowHandler" IsClosable="False">
            <ScrollViewer VerticalAlignment="Stretch">
                <StackPanel Padding="8,12" Spacing="8">
                    <ContentControl Tag="HWnd|Type: IntPtr" Template="{StaticResource SettingsCard}">
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <TextBox IsHitTestVisible="False" Text="{x:Bind viewModel.WindowHandler_hWnd, Mode=OneWay}" />
                            <Button Command="{x:Bind viewModel.WindowHandler_UpdateHWndCommand}" Content="Update" />
                        </StackPanel>
                    </ContentControl>

                    <ContentControl Tag="HasCustomTitleBar|Type: bool" Template="{StaticResource SettingsCard}">
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <ToggleSwitch IsHitTestVisible="False" IsOn="{x:Bind viewModel.WindowHandler_hasCustomTitleBar, Mode=OneWay}" />
                            <Button Command="{x:Bind viewModel.WindowHandler_UpdateHasCustomTitlebarCommand}" Content="Update" />
                        </StackPanel>
                    </ContentControl>

                    <ContentControl Tag="Size|Type: SizeInt32" Template="{StaticResource SettingsCard}">
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <TextBox IsHitTestVisible="False" Text="{x:Bind viewModel.WindowHandler_size, Mode=OneWay}" />
                            <Button Command="{x:Bind viewModel.WindowHandler_UpdateSizeCommand}" Content="Update" />
                        </StackPanel>
                    </ContentControl>

                    <ContentControl Tag="Position|Type: PointInt32" Template="{StaticResource SettingsCard}">
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <TextBox IsHitTestVisible="False" Text="{x:Bind viewModel.WindowHandler_position, Mode=OneWay}" />
                            <Button Command="{x:Bind viewModel.WindowHandler_UpdatePositionCommand}" Content="Update" />
                        </StackPanel>
                    </ContentControl>

                    <ContentControl Tag="ScreenSize|Type: RectInt32" Template="{StaticResource SettingsCard}">
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <TextBox IsHitTestVisible="False" Text="{x:Bind viewModel.WindowHandler_screenSize, Mode=OneWay}" />
                            <Button Command="{x:Bind viewModel.WindowHandler_UpdateScreenSizeCommand}" Content="Update" />
                        </StackPanel>
                    </ContentControl>

                    <ContentControl Tag="LoggerWindow|Type: Window?" Template="{StaticResource SettingsCard}">
                        <Button Content="Show Logger" IsEnabled="False" />
                    </ContentControl>

                    <Expander
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        Header="SetIcon()|Sets the application icon for the current window"
                        Template="{StaticResource CardExpander}">
                        <Expander.Tag>
                            <ContentControl Tag="path|Type: string" Template="{StaticResource SettingsCard}">
                                <TextBox
                                    Name="WindowHandler_IconPath"
                                    Width="400"
                                    PlaceholderText="Path..." />
                            </ContentControl>
                        </Expander.Tag>

                        <Button
                            Command="{x:Bind viewModel.WindowHandler_SetIconCommand}"
                            CommandParameter="{Binding Text, ElementName=WindowHandler_IconPath}"
                            Content="Test Method" />
                    </Expander>

                    <Expander
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        Header="SetSize()|Sets the size for the current window"
                        Template="{StaticResource CardExpander}">
                        <Expander.Tag>
                            <StackPanel Spacing="8">
                                <ContentControl Tag="externalWindow|[optional] [default: Window]  Type: Window?" Template="{StaticResource SettingsCard}">
                                    <Button Content="Set Window" IsEnabled="False" />
                                </ContentControl>

                                <ContentControl Tag="width|Type: int" Template="{StaticResource SettingsCard}">
                                    <NumberBox SpinButtonPlacementMode="Compact" Value="{x:Bind viewModel.WindowHandler_sizeWidth, Mode=TwoWay}" />
                                </ContentControl>

                                <ContentControl Tag="height|Type: int" Template="{StaticResource SettingsCard}">
                                    <NumberBox SpinButtonPlacementMode="Compact" Value="{x:Bind viewModel.WindowHandler_sizeHeight, Mode=TwoWay}" />
                                </ContentControl>
                            </StackPanel>
                        </Expander.Tag>

                        <Button Command="{x:Bind viewModel.WindowHandler_SetSizeCommand}" Content="Test Method" />
                    </Expander>

                    <Expander
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        Header="SetMinSize()|[experimental]  Sets the minimum size for the current window"
                        Template="{StaticResource CardExpander}">
                        <Expander.Tag>
                            <StackPanel Spacing="8">
                                <ContentControl Tag="width|Type: int" Template="{StaticResource SettingsCard}">
                                    <NumberBox SpinButtonPlacementMode="Compact" Value="{x:Bind viewModel.WindowHandler_minSizeWidth, Mode=TwoWay}" />
                                </ContentControl>

                                <ContentControl Tag="height|Type: int" Template="{StaticResource SettingsCard}">
                                    <NumberBox SpinButtonPlacementMode="Compact" Value="{x:Bind viewModel.WindowHandler_minSizeHeight, Mode=TwoWay}" />
                                </ContentControl>
                            </StackPanel>
                        </Expander.Tag>

                        <Button Command="{x:Bind viewModel.WindowHandler_SetMinSizeCommand}" Content="Test Method" />
                    </Expander>

                    <Expander
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        Header="SetPosition()|Sets the position of the current window"
                        Template="{StaticResource CardExpander}">
                        <Expander.Tag>
                            <StackPanel Spacing="8">
                                <ContentControl Tag="x|Type: int" Template="{StaticResource SettingsCard}">
                                    <NumberBox SpinButtonPlacementMode="Compact" Value="{x:Bind viewModel.WindowHandler_positionX, Mode=TwoWay}" />
                                </ContentControl>

                                <ContentControl Tag="y|Type: int" Template="{StaticResource SettingsCard}">
                                    <NumberBox SpinButtonPlacementMode="Compact" Value="{x:Bind viewModel.WindowHandler_positionY, Mode=TwoWay}" />
                                </ContentControl>
                            </StackPanel>
                        </Expander.Tag>

                        <Button Command="{x:Bind viewModel.WindowHandler_SetPositionCommand}" Content="Test Method" />
                    </Expander>

                    <ContentControl Tag="SetPositionToCenter()|Sets the postion of the current window to the screen center" Template="{StaticResource SettingsCard}">
                        <Button Command="{x:Bind viewModel.WindowHandler_SetPositionToCenterCommand}" Content="Test Method" />
                    </ContentControl>

                    <Expander
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        Header="Register()|Initializes an object with the current window"
                        Template="{StaticResource CardExpander}">
                        <Expander.Tag>
                            <ContentControl Tag="target|Type: object" Template="{StaticResource SettingsCard}">
                                <Button Content="Set Target" IsEnabled="False" />
                            </ContentControl>
                        </Expander.Tag>

                        <Button Content="Test Method" IsEnabled="False" />
                    </Expander>

                    <ContentControl Tag="EnsureWindowsSystemDispatcherQueueController()|Ensures there is a windows DispatcherQueue contrroller" Template="{StaticResource SettingsCard}">
                        <Button Command="{x:Bind viewModel.WindowHandler_EnsureWindowsSystemDispatcherQueueControllerCommand}" Content="Test Method" />
                    </ContentControl>

                    <Expander
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        Header="SetTitleBar()|Sets an UIElement as the title bar for the current window"
                        Template="{StaticResource CardExpander}">
                        <Expander.Tag>
                            <StackPanel Spacing="8">
                                <ContentControl Tag="titleBar|Type: UIElement?" Template="{StaticResource SettingsCard}">
                                    <StackPanel Orientation="Horizontal">
                                        <ToggleSwitch
                                            IsOn="{x:Bind viewModel.WindowHandler_titleBarIsNull, Mode=TwoWay}"
                                            OffContent="Is Null"
                                            OnContent="Is Null" />
                                        <Button Content="Set UIElement" IsEnabled="False" />
                                    </StackPanel>
                                </ContentControl>

                                <ContentControl Tag="container|[optional] [default: null]  Type: UIElement?" Template="{StaticResource SettingsCard}">
                                    <StackPanel Orientation="Horizontal">
                                        <ToggleSwitch
                                            IsOn="{x:Bind viewModel.WindowHandler_titleBarContainerIsNull, Mode=TwoWay}"
                                            OffContent="Is Null"
                                            OnContent="Is Null" />
                                        <Button Content="Set UIElement" IsEnabled="False" />
                                    </StackPanel>
                                </ContentControl>
                            </StackPanel>
                        </Expander.Tag>

                        <Button Command="{x:Bind viewModel.WindowHandler_SetTitleBarCommand}" Content="Test Method" />
                    </Expander>

                </StackPanel>
            </ScrollViewer>
        </TabViewItem>
    </TabView>
</Page>
